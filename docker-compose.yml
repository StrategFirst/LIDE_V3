services:
  # Database
  database-service:
    image: mongo:latest
    restart: on-failure:3
    container_name: ${LIDE_CONTAINER_DB}
    volumes:
      - database:/data/db
    environment:
      MONGO_INIT_DATABASE: ${LIDE_DB_NAME}
      MONGO_INIT_ROOT_USERNAME: ${LIDE_DB_USERNAME}
      MONGO_INIT_ROOT_PASSWORD: ${LIDE_DB_PASSWORD}
    networks:
      - lidenetwork

  # Back-end Server
  lide-back-service:
    build: ./lide-back
    image: lide-back
    depends_on:
      - database-service
    links:
      - database-service
    restart: on-failure:3
    container_name: ${LIDE_CONTAINER_BACK}
    hostname: ${LIDE_CONTAINER_BACK}
    volumes:
      - /app/node_modules
      - ./lide-back:/app
      - /lide-data:/lide-data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      DB_HOST: ${LIDE_CONTAINER_DB}
      DB_NAME: ${LIDE_DB_NAME}
      DB_PORT: ${LIDE_PORT_INTERN_DB}
      SERVER_PORT: ${LIDE_PORT_INTERN_BACK}
    env_file:
      - .env
    ports:
      - ${LIDE_PORT_EXPOSE_BACK}:${LIDE_PORT_INTERN_BACK}
    working_dir: /app
    entrypoint: node server.js
    #entrypoint: npm run dev
    networks:
      - lidenetwork

  # Web Server
  lide-web-service:
    build: ./lide-web
    image: lide-web
    restart: on-failure:3
    container_name: ${LIDE_CONTAINER_WEB}
    hostname: ${LIDE_CONTAINER_WEB}
    volumes:
      - /app/node_modules
      - ./lide-web:/app
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LIDE_BACK_PORT: ${LIDE_PORT_INTERN_BACK}
      BACK_HOST: ${LIDE_CONTAINER_BACK}
    env_file:
      - .env
    ports:
      - ${LIDE_PORT_EXPOSE_WEB}:8080
    working_dir: /app
    entrypoint: npm run serve
    networks:
      - lidenetwork

  # WebSocket Server
  lide-wss-service:
    build: ./lide-wss
    image: lide-wss
    restart: on-failure:3
    container_name: ${LIDE_CONTAINER_WSS}
    hostname: ${LIDE_CONTAINER_WSS}
    environment:
      SERVER_PORT: ${LIDE_PORT_INTERN_WSS}
      DOCKER_API_PORT: ${DOCKER_API_PORT}      
      DOCKER_API_HOST: ${DOCKER_API_HOST}
      MAX_LENGTH_OUTPUT_ALLOWED: ${MAX_LENGTH_OUTPUT_ALLOWED}
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    entrypoint: node server_socket.js
    network_mode: host

volumes:
  database:

networks:
  lidenetwork:
